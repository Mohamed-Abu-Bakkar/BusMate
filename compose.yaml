# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker Compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
services:
  # server:
  #   build:
  #     context: .
  #   environment:
  #     NODE_ENV: production
  #   ports:
  #     - 3000:3000
  #   depends_on:
  #     postgres-container:
  #       condition: service_healthy

  postgres-container:
    image: postgres:17.5
    restart: unless-stopped
    container_name: BusMate-psql
    environment:
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_DB: BusMate
    volumes:
      - busmate-pg-data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "$POSTGRES_USER", "-d", "BusMate" ]
      interval: 10s
      timeout: 5s
      retries: 5

    
      
  redis:
    image: redis:7-alpine
    container_name: BusMate-redis
    command: ["redis-server", "--requirepass", "$REDIS_PASSWORD"]
    env_file:
      - .env
    environment:
      - REDIS_PASSWORD=$REDIS_PASSWORD
    ports:
      - "6379:6379"
    volumes:
    - busmate-redis-data:/data
    restart: unless-stopped

    

volumes:
  busmate-pg-data:
  busmate-redis-data:

